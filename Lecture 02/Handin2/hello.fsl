{ // starting

module Hello_fslex
open FSharp.Text.Lexing
open System
}

rule Tokenize = parse
  | ['0'-'9']+       { LexBuffer<char>.LexemeString lexbuf } 
  | ['+''-']?(['0'-'9']*['.'])?['0'-'9']+       { LexBuffer<char>.LexemeString lexbuf } 
    //Q1 The regex is [0-9]. They are associated with Integers.
    //Q4 The regex is [0-9]+. They are associated with Integers.
    //Q5 The regex is [+-]?([0-9]*[.])?[0-9]+. They are associated with Floats.
    //Q6 34 is know. '.' in 34.24 is known. ',' in 34,24 is not known, which is why we only keep what we recognized before encountering it.
  | _               { failwith "Lexer error: illegal symbol" }


{ // ending

[<EntryPoint>]
let main argv =
      printfn "Hello World from FsLex!\n\nPlease pass a digit:"
      let input = Console.ReadLine()
      let res=Tokenize (LexBuffer<char>.FromString input)
      printfn "The lexer recognizes %s" res
      0

}
